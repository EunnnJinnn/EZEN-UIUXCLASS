*자료구조 : 데이터가 어떤 구조로 저장되고 어떻게 사용되는지를 나타내는 일련의 과정 및 결과
> 로또번호 추첨기 프로그램 개발
> 로또번호를 랜덤으로 생성
> 변수 담아

*알고리즘 : 어떤 문제를 ㅎ결하기 위한 최고 및 

*시간복잡도
- 어떠한 문제를 해결해나가는데 걸리는 소요시간
- 2사라이 동시에 반복문
(*for / for of / while)

어떻게 계산?
arr = [1,3,5,7]
=> 미션, 주어진 배열에서 5를 찾으세요

1) 한 번에 직접 찾는 방법
2) 반복문 : 1~7 순회하면서 찾는 방법
3) 가장 안좋은 방법 : 1, 3, 7, ~5를 찾는 방법
(*배열의 길이수 만큼 시간이 걸리는 방법)

=> 가장 시간이 많이 걸리는 상황을 전제하에 시간복잡도를 계산

*시간 복잡도의 단위

- 빅오메가 : 최선의 경우, 한 번에 찾을 때를 의미
- 빅세타 : 평균의 경우, 배열의 길이 
- 빅오 : 최악의 경우, 배열의 길이만큼 시간이 걸리는 것을 의미

- 프로그래밍 영역에서는 시간이 가장 오래걸릴 것으로 판단되는 그 구간을 발췌해서 시간복잡도를 계산

- 자바스크립트를 잘한다
= 배열과 반목문을 자유롭게 가지고 놀 수 있다

*반복문 => 이러터블 객체 => 배열
*배열 : Java / C / Python

배열을 정의할 때, 사전에 배열안에 몇개의 아이템이 들어가게 할지 결정을 짓는다.

자바스크립트 배열은 살짝 예외적인 상황이나, 배열의 경우 불편
사전에 데이터에 대한 개수를 결정=> 데이터를 추가하거나 삭제하거나 불편

배열 => 참조타입(*주소참조)
= 데이터를 찾아오는 것이 매우 효율적 = 데이터를 읽고 사용하는 것이 매우 신속,정확하다

*연결리스트 배열 X -> 하지만, 배열과 유사한 기능 구현
-> 각각의 고유한 값을 독립적을 생성해주고, 이들을 서로 연결시켜주는 자료구조 형태

*연결리스트를 활용해서 구현할 수 있는 기능 및 연산작업을 하나씩

1) 연결리스트의 모든 데이터를 출력 기능
> printAll()
2) 연결리스트의 모든 데이터를 제거 가능
> clear()
3) 연결리스트 내 인덱스를 삭제 기능
> deleteAt(index)
4) 연결리스트 내 인덱스를 읽기 가능
> getNodeAt(index)
5) 연결리스트 내 인덱스를 마지막에 삽입하는 기능

6) 연결리스트 내 인덱스를 마지막에서 삭제하는 기능